From 5ff444b3d9264241418e42f653e2953e6a104d3d Mon Sep 17 00:00:00 2001
From: Chunming Zhou <david1.zhou@amd.com>
Date: Fri, 30 Mar 2018 10:23:48 +0800
Subject: [PATCH 3977/4131] Revert "drm/amdgpu: Don't change preferred domian
 when fallback GTT v5"

This reverts commit bbaf1871ea1d7b7021e350a3e8bb1ec8408c2030.

Felix reports this commit causes regression.

Change-Id: I88d66f81b10f27d52ae6546b30aa0c66b2188efa

Signed-off-by: Chunming Zhou <david1.zhou@amd.com>

Conflicts:
      drivers/gpu/drm/amd/amdgpu/amdgpu_gem.c
---
 drivers/gpu/drm/amd/amdgpu/amdgpu_gem.c    | 13 ++++++++++++-
 drivers/gpu/drm/amd/amdgpu/amdgpu_object.c | 16 ++--------------
 2 files changed, 14 insertions(+), 15 deletions(-)

diff --git a/drivers/gpu/drm/amd/amdgpu/amdgpu_gem.c b/drivers/gpu/drm/amd/amdgpu/amdgpu_gem.c
index e7e13dc..d2ac7c0 100644
--- a/drivers/gpu/drm/amd/amdgpu/amdgpu_gem.c
+++ b/drivers/gpu/drm/amd/amdgpu/amdgpu_gem.c
@@ -86,8 +86,19 @@ int amdgpu_gem_object_create(struct amdgpu_device *adev, unsigned long size,
 	r = amdgpu_bo_create(adev, size, alignment, initial_domain,
 				flags, type, resv, &bo);
 	if (r) {
+		if (r != -ERESTARTSYS) {
+			if (flags & AMDGPU_GEM_CREATE_CPU_ACCESS_REQUIRED) {
+				flags &= ~AMDGPU_GEM_CREATE_CPU_ACCESS_REQUIRED;
+				goto retry;
+			}
+
+			if (initial_domain == AMDGPU_GEM_DOMAIN_VRAM) {
+				initial_domain |= AMDGPU_GEM_DOMAIN_GTT;
+				goto retry;
+			}
 			DRM_DEBUG("Failed to allocate GEM object (%ld, %d, %u, %d)\n",
-				  size, initial_domain, alignment, r);
+				size, initial_domain, alignment, r);
+		}
 			return r;
 	}
 	*obj = &bo->gem_base;
diff --git a/drivers/gpu/drm/amd/amdgpu/amdgpu_object.c b/drivers/gpu/drm/amd/amdgpu/amdgpu_object.c
index 027d34f..c9e2fe9 100755
--- a/drivers/gpu/drm/amd/amdgpu/amdgpu_object.c
+++ b/drivers/gpu/drm/amd/amdgpu/amdgpu_object.c
@@ -379,7 +379,6 @@ static int amdgpu_bo_do_create(struct amdgpu_device *adev, unsigned long size,
 	struct amdgpu_bo *bo;
 	unsigned long page_align;
 	size_t acc_size;
-	u32 domains;
 	int r;
 
 	page_align = roundup(byte_align, PAGE_SIZE) >> PAGE_SHIFT;
@@ -443,24 +442,13 @@ static int amdgpu_bo_do_create(struct amdgpu_device *adev, unsigned long size,
 #endif
 
 	bo->tbo.bdev = &adev->mman.bdev;
-	domains = bo->preferred_domains;
-retry:
-	amdgpu_ttm_placement_from_domain(bo, domains);
+	amdgpu_ttm_placement_from_domain(bo, domain);
 
 	r = ttm_bo_init_reserved(&adev->mman.bdev, &bo->tbo, size, type,
 				 &bo->placement, page_align, &ctx, acc_size,
 				 NULL, resv, &amdgpu_ttm_bo_destroy);
 
-        if (unlikely(r && r != -ERESTARTSYS)) {
-                if (bo->flags & AMDGPU_GEM_CREATE_CPU_ACCESS_REQUIRED) {
-                        bo->flags &= ~AMDGPU_GEM_CREATE_CPU_ACCESS_REQUIRED;
-                        goto retry;
-                } else if (domains != bo->allowed_domains) {
-                        domains = bo->allowed_domains;
-                        goto retry;
-                }
-	}
-	if (unlikely(r))
+	if (unlikely(r != 0))
 		return r;
 
 	if (adev->gmc.visible_vram_size < adev->gmc.real_vram_size &&
-- 
2.7.4

