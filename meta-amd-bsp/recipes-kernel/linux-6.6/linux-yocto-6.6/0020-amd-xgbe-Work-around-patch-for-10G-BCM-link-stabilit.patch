From 0cb8764d4ddfd2be63a5458114ca394053b2b4fa Mon Sep 17 00:00:00 2001
From: Ramesh Garidapuri <ramesh.garidapuri@amd.com>
Date: Thu, 14 Dec 2023 08:43:55 +0530
Subject: [PATCH] amd-xgbe : Work around patch for 10G BCM link stability
 issues

Change-Id: I77097c21f311099f4c595d2d0c02632e58cb81a4
Signed-off-by: Ramesh Garidapuri <ramesh.garidapuri@amd.com>
---
 drivers/net/ethernet/amd/xgbe/xgbe-phy-v2.c | 45 ++++++++++++++++++---
 1 file changed, 40 insertions(+), 5 deletions(-)

diff --git a/drivers/net/ethernet/amd/xgbe/xgbe-phy-v2.c b/drivers/net/ethernet/amd/xgbe/xgbe-phy-v2.c
index 488c2f47750e..fa59dc42d713 100644
--- a/drivers/net/ethernet/amd/xgbe/xgbe-phy-v2.c
+++ b/drivers/net/ethernet/amd/xgbe/xgbe-phy-v2.c
@@ -3078,6 +3078,7 @@ static int xgbe_get_phy_link_status(struct xgbe_prv_data *pdata, int *an_restart
 	struct xgbe_phy_data *phy_data = pdata->phy_data;
 	unsigned int reg;
 	int ret;
+	enum xgbe_mode mode;
 
 	*an_restart = 0;
 
@@ -3115,7 +3116,7 @@ static int xgbe_get_phy_link_status(struct xgbe_prv_data *pdata, int *an_restart
 	}
 
 	if (phy_data->port_mode == XGBE_PORT_MODE_10GBASE_T) {
-		enum xgbe_mode mode;
+		
 		mode  = xgbe_phy_mdio_an_outcome(pdata);
 		if (mode != xgbe_phy_cur_mode(pdata)) {
 			netif_dbg(pdata, link, pdata->netdev, "Ext PHY changed interface mode to %d so AN is needed\n", mode);
@@ -3142,8 +3143,23 @@ static int xgbe_get_phy_link_status(struct xgbe_prv_data *pdata, int *an_restart
 		/* if the link is available and adaptation is done,
 		 * declare link up
 		 */
-		if ((reg & MDIO_STAT1_LSTATUS) && pdata->rx_adapt_done)
-			return 1;
+		if((pdata->an_mode == XGBE_AN_MODE_MDIO) && (mode == XGBE_MODE_KR)){
+			if (pdata->phy.speed == SPEED_10000)
+			{
+				if (((reg & MDIO_STAT1_LSTATUS) && !(reg & MDIO_STAT1_FAULT)) && (pdata->rx_adapt_done)) {
+					return 1;
+				} else {
+					return 0 ;
+				}
+			}
+			else {
+				if ((reg & MDIO_STAT1_LSTATUS) && (pdata->rx_adapt_done))
+				      return 1;
+			}
+		} else {
+			if ((reg & MDIO_STAT1_LSTATUS) && (pdata->rx_adapt_done))
+				return 1;
+		}
 		/* If either link is not available or adaptation is not done,
 		 * retrigger the adaptation logic. (if the mode is not set,
 		 * then issue mailbox command first)
@@ -3158,8 +3174,27 @@ static int xgbe_get_phy_link_status(struct xgbe_prv_data *pdata, int *an_restart
 		/* check again for the link and adaptation status */
 		reg = XMDIO_READ(pdata, MDIO_MMD_PCS, MDIO_STAT1);
 		reg = XMDIO_READ(pdata, MDIO_MMD_PCS, MDIO_STAT1);
-		if ((reg & MDIO_STAT1_LSTATUS) && pdata->rx_adapt_done)
-			return 1;
+
+		if((pdata->an_mode == XGBE_AN_MODE_MDIO) && (mode == XGBE_MODE_KR)){
+			if (pdata->phy.speed == SPEED_10000){
+
+				if (((reg & MDIO_STAT1_LSTATUS) && !(reg & MDIO_STAT1_FAULT)) && (pdata->rx_adapt_done)) {
+					return 1;
+				} else {
+					return 0;
+				}
+			}
+			else {
+				if ((reg & MDIO_STAT1_LSTATUS) && (pdata->rx_adapt_done))
+					return 1;
+			}
+
+                } else {
+                        if ((reg & MDIO_STAT1_LSTATUS) && (pdata->rx_adapt_done))
+                                return 1;
+                }
+
+	
 	} else if (reg & MDIO_STAT1_LSTATUS)
 		return 1;
 
-- 
2.34.1

