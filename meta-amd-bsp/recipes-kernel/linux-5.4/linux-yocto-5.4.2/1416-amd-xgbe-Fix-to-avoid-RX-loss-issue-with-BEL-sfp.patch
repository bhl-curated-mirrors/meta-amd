From 493120022cb79cc12df22d75746163d28375d80c Mon Sep 17 00:00:00 2001
From: Sudheesh Mavila <sudheesh.mavila@amd.com>
Date: Mon, 27 Jan 2020 14:50:02 +0530
Subject: [PATCH 1416/1453] amd-xgbe Fix to avoid RX loss issue with BEL sfp

Signed-off-by: Sudheesh Mavila <sudheesh.mavila@amd.com>
---
 drivers/net/ethernet/amd/xgbe/xgbe-phy-v2.c | 23 +++++++++++++++++++--
 1 file changed, 21 insertions(+), 2 deletions(-)

diff --git a/drivers/net/ethernet/amd/xgbe/xgbe-phy-v2.c b/drivers/net/ethernet/amd/xgbe/xgbe-phy-v2.c
index 9f1857d32df3..a625603625c6 100755
--- a/drivers/net/ethernet/amd/xgbe/xgbe-phy-v2.c
+++ b/drivers/net/ethernet/amd/xgbe/xgbe-phy-v2.c
@@ -1360,6 +1360,9 @@ static void xgbe_phy_sfp_detect(struct xgbe_prv_data *pdata)
 {
 	struct xgbe_phy_data *phy_data = pdata->phy_data;
 	int ret;
+	int error_retry = 0;
+	unsigned int phy_id = 0;
+	int prev_status = 0;
 
 	/* Reset the SFP signals and info */
 	xgbe_phy_sfp_reset(phy_data);
@@ -1368,8 +1371,10 @@ static void xgbe_phy_sfp_detect(struct xgbe_prv_data *pdata)
 	if (ret)
 		return;
 
-	if (atomic_read(&pdata->exit_timer))
-		goto put;
+	prev_status = phy_data->sfp_rx_los;
+
+retry:	if (atomic_read(&pdata->exit_timer))
+			goto put;
 
 	/* Read the SFP signals and check for module presence */
 	xgbe_phy_sfp_signals(pdata);
@@ -1391,6 +1396,20 @@ static void xgbe_phy_sfp_detect(struct xgbe_prv_data *pdata)
 
 	xgbe_phy_sfp_parse_eeprom(pdata);
 
+	if(	phy_data->phydev)
+		phy_id = phy_data->phydev->phy_id;
+
+	if(!prev_status) {
+		/* only for BEL SFP */
+		if(((phy_id & 0xfffffff0) == 0x03625d10) && (phy_data->sfp_rx_los && (error_retry != 10))) {
+				dev_err_once(pdata->dev, "%s: RX loss event from SFP\n",
+					netdev_name(pdata->netdev));
+				error_retry++;
+				udelay(500);
+				goto retry;
+		}
+	}
+
 	xgbe_phy_sfp_external_phy(pdata);
 
 put:
-- 
2.17.1

