From 9ec3fd034d6bade9a9bb86f2f423b398d7318d95 Mon Sep 17 00:00:00 2001
From: Sudheesh Mavila <sudheesh.mavila@amd.com>
Date: Mon, 27 Jan 2020 14:31:01 +0530
Subject: [PATCH 1274/1453] amd-xgbe Fix to avoid race condition in cancelling
 timer

Signed-off-by: Sudheesh Mavila <sudheesh.mavila@amd.com>
---
 drivers/net/ethernet/amd/xgbe/xgbe-drv.c    | 8 ++++++++
 drivers/net/ethernet/amd/xgbe/xgbe-phy-v2.c | 6 ++++++
 drivers/net/ethernet/amd/xgbe/xgbe.h        | 2 ++
 3 files changed, 16 insertions(+)
 mode change 100644 => 100755 drivers/net/ethernet/amd/xgbe/xgbe-drv.c
 mode change 100644 => 100755 drivers/net/ethernet/amd/xgbe/xgbe.h

diff --git a/drivers/net/ethernet/amd/xgbe/xgbe-drv.c b/drivers/net/ethernet/amd/xgbe/xgbe-drv.c
old mode 100644
new mode 100755
index 98f8f2033154..1e4262f3f069
--- a/drivers/net/ethernet/amd/xgbe/xgbe-drv.c
+++ b/drivers/net/ethernet/amd/xgbe/xgbe-drv.c
@@ -683,6 +683,9 @@ static void xgbe_service_timer(struct timer_list *t)
 {
 	struct xgbe_prv_data *pdata = from_timer(pdata, t, service_timer);
 
+	if (atomic_read(&pdata->exit_timer))
+		return;
+
 	queue_work(pdata->dev_workqueue, &pdata->service_work);
 
 	mod_timer(&pdata->service_timer, jiffies + HZ);
@@ -714,6 +717,9 @@ static void xgbe_stop_timers(struct xgbe_prv_data *pdata)
 	struct xgbe_channel *channel;
 	unsigned int i;
 
+	atomic_inc(&pdata->exit_timer);
+	udelay(1000);
+
 	del_timer_sync(&pdata->service_timer);
 
 	for (i = 0; i < pdata->channel_count; i++) {
@@ -1954,6 +1960,8 @@ static int xgbe_open(struct net_device *netdev)
 	INIT_WORK(&pdata->stopdev_work, xgbe_stopdev);
 	INIT_WORK(&pdata->tx_tstamp_work, xgbe_tx_tstamp);
 
+	atomic_set(&pdata->exit_timer, 0);
+
 	ret = xgbe_alloc_memory(pdata);
 	if (ret)
 		goto err_ptpclk;
diff --git a/drivers/net/ethernet/amd/xgbe/xgbe-phy-v2.c b/drivers/net/ethernet/amd/xgbe/xgbe-phy-v2.c
index 585d14962268..9f1857d32df3 100755
--- a/drivers/net/ethernet/amd/xgbe/xgbe-phy-v2.c
+++ b/drivers/net/ethernet/amd/xgbe/xgbe-phy-v2.c
@@ -1368,6 +1368,9 @@ static void xgbe_phy_sfp_detect(struct xgbe_prv_data *pdata)
 	if (ret)
 		return;
 
+	if (atomic_read(&pdata->exit_timer))
+		goto put;
+
 	/* Read the SFP signals and check for module presence */
 	xgbe_phy_sfp_signals(pdata);
 	if (phy_data->sfp_mod_absent) {
@@ -1383,6 +1386,9 @@ static void xgbe_phy_sfp_detect(struct xgbe_prv_data *pdata)
 		goto put;
 	}
 
+	if (atomic_read(&pdata->exit_timer))
+		goto put;
+
 	xgbe_phy_sfp_parse_eeprom(pdata);
 
 	xgbe_phy_sfp_external_phy(pdata);
diff --git a/drivers/net/ethernet/amd/xgbe/xgbe.h b/drivers/net/ethernet/amd/xgbe/xgbe.h
old mode 100644
new mode 100755
index 47bcbcf58048..13cfcf96a763
--- a/drivers/net/ethernet/amd/xgbe/xgbe.h
+++ b/drivers/net/ethernet/amd/xgbe/xgbe.h
@@ -1295,6 +1295,8 @@ struct xgbe_prv_data {
 
 	bool debugfs_an_cdr_workaround;
 	bool debugfs_an_cdr_track_early;
+
+	atomic_t exit_timer;
 };
 
 /* Function prototypes*/
-- 
2.17.1

