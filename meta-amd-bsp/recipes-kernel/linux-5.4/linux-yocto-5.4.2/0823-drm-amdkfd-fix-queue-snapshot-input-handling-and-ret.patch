From f81ed2ed8c9c695c2e2beade3d705bf36a416d2a Mon Sep 17 00:00:00 2001
From: Jonathan Kim <jonathan.kim@amd.com>
Date: Wed, 11 Sep 2019 09:30:07 -0400
Subject: [PATCH 0823/1453] drm/amdkfd: fix queue snapshot input handling and
 return

queue snapshot doesn't need to set gpu id.  should get queues
from target process, not calling process.  set queues copied
to 0 if there are 0 queues or on errno.

New queue should clear unconditionally on any queue status word update.

v2: ported missing commit to amd-staging-dkms-5.2

Change-Id: If8bcf35ce27da2a8e07061a67298b5a29d5f7b99
Signed-off-by: Jonathan Kim <Jonathan.Kim@amd.com>
Reviewed-by: Felix Kuehling <Felix.Kuehling@amd.com>
Signed-off-by: Felix Kuehling <Felix.Kuehling@amd.com>
Reviewed-by: Jonathan Kim <Jonathan.Kim@amd.com>
---
 drivers/gpu/drm/amd/amdkfd/kfd_chardev.c      | 7 +++----
 drivers/gpu/drm/amd/amdkfd/kfd_debug_events.c | 6 +++---
 2 files changed, 6 insertions(+), 7 deletions(-)

diff --git a/drivers/gpu/drm/amd/amdkfd/kfd_chardev.c b/drivers/gpu/drm/amd/amdkfd/kfd_chardev.c
index 08acdbd01090..5a2ec6216dce 100755
--- a/drivers/gpu/drm/amd/amdkfd/kfd_chardev.c
+++ b/drivers/gpu/drm/amd/amdkfd/kfd_chardev.c
@@ -2805,14 +2805,13 @@ static int kfd_ioctl_dbg_set_debug_trap(struct file *filep,
 						 &args->data3);
 		break;
 	case KFD_IOC_DBG_TRAP_GET_QUEUE_SNAPSHOT:
-		r = pqm_get_queue_snapshot(&p->pqm, args->data1,
+		r = pqm_get_queue_snapshot(&target->pqm, args->data1,
 					   (void __user *)args->ptr,
 					   args->data2);
 
-		if (r > 0) {
-			args->data2 = r;
+		args->data2 = r < 0 ? 0 : r;
+		if (r > 0)
 			r = 0;
-		}
 
 		break;
 	case KFD_IOC_DBG_TRAP_GET_VERSION:
diff --git a/drivers/gpu/drm/amd/amdkfd/kfd_debug_events.c b/drivers/gpu/drm/amd/amdkfd/kfd_debug_events.c
index df98f30d66d7..90d7215a4fd3 100644
--- a/drivers/gpu/drm/amd/amdkfd/kfd_debug_events.c
+++ b/drivers/gpu/drm/amd/amdkfd/kfd_debug_events.c
@@ -112,10 +112,10 @@ uint32_t kfd_dbg_get_queue_status_word(struct queue *q, int flags)
 	KFD_DBG_EV_SET_NEW_QUEUE_STATE(queue_status_word,
 				  q->properties.is_new);
 
-	if (flags & KFD_DBG_EV_FLAG_CLEAR_STATUS) {
-		q->properties.is_new = false;
+	if (flags & KFD_DBG_EV_FLAG_CLEAR_STATUS)
 		q->properties.debug_event_type = 0;
-	}
+
+	q->properties.is_new = false;
 
 	return queue_status_word;
 }
-- 
2.17.1

