From 3eabdf54e085e722c349c88b5df19cf8e87c9337 Mon Sep 17 00:00:00 2001
From: Sudheesh Mavila <sudheesh.mavila@amd.com>
Date: Wed, 5 Feb 2020 16:45:50 +0530
Subject: [PATCH 1453/1453] amd-i2s Bilby specific changes

Signed-off-by: Sudheesh Mavila <sudheesh.mavila@amd.com>
---
 sound/soc/amd/raven/acp3x-pcm-dma.c |  0
 sound/soc/amd/raven/acp3x.h         | 12 ++++----
 sound/soc/amd/raven/pci-acp3x.c     | 46 ++++++++++++++++++++++++-----
 3 files changed, 44 insertions(+), 14 deletions(-)
 mode change 100644 => 100755 sound/soc/amd/raven/acp3x-pcm-dma.c
 mode change 100644 => 100755 sound/soc/amd/raven/acp3x.h
 mode change 100644 => 100755 sound/soc/amd/raven/pci-acp3x.c

diff --git a/sound/soc/amd/raven/acp3x-pcm-dma.c b/sound/soc/amd/raven/acp3x-pcm-dma.c
old mode 100644
new mode 100755
diff --git a/sound/soc/amd/raven/acp3x.h b/sound/soc/amd/raven/acp3x.h
old mode 100644
new mode 100755
index 4f2cadd90a87..125afdbd2341
--- a/sound/soc/amd/raven/acp3x.h
+++ b/sound/soc/amd/raven/acp3x.h
@@ -26,14 +26,14 @@
 #define PLAYBACK_FIFO_ADDR_OFFSET 0x400
 #define CAPTURE_FIFO_ADDR_OFFSET  0x500
 
-#define PLAYBACK_MIN_NUM_PERIODS    2
+#define PLAYBACK_MIN_NUM_PERIODS    8
 #define PLAYBACK_MAX_NUM_PERIODS    8
-#define PLAYBACK_MAX_PERIOD_SIZE    16384
-#define PLAYBACK_MIN_PERIOD_SIZE    4096
-#define CAPTURE_MIN_NUM_PERIODS     2
+#define PLAYBACK_MAX_PERIOD_SIZE    8192
+#define PLAYBACK_MIN_PERIOD_SIZE    8192
+#define CAPTURE_MIN_NUM_PERIODS     8
 #define CAPTURE_MAX_NUM_PERIODS     8
-#define CAPTURE_MAX_PERIOD_SIZE     16384
-#define CAPTURE_MIN_PERIOD_SIZE     4096
+#define CAPTURE_MAX_PERIOD_SIZE     8192
+#define CAPTURE_MIN_PERIOD_SIZE     8192
 
 #define MAX_BUFFER (PLAYBACK_MAX_PERIOD_SIZE * PLAYBACK_MAX_NUM_PERIODS)
 #define MIN_BUFFER MAX_BUFFER
diff --git a/sound/soc/amd/raven/pci-acp3x.c b/sound/soc/amd/raven/pci-acp3x.c
old mode 100644
new mode 100755
index facec2472b34..3e65ed9a4a28
--- a/sound/soc/amd/raven/pci-acp3x.c
+++ b/sound/soc/amd/raven/pci-acp3x.c
@@ -16,7 +16,7 @@ struct acp3x_dev_data {
 	void __iomem *acp3x_base;
 	bool acp3x_audio_mode;
 	struct resource *res;
-	struct platform_device *pdev;
+	struct platform_device *pdev[3];
 };
 
 static int snd_acp3x_probe(struct pci_dev *pci,
@@ -61,15 +61,18 @@ static int snd_acp3x_probe(struct pci_dev *pci,
 		ret = -ENOMEM;
 		goto release_regions;
 	}
+
+	/* set pci bus-mastering */
 	pci_set_master(pci);
+
 	pci_set_drvdata(pci, adata);
 
 	val = rv_readl(adata->acp3x_base + mmACP_I2S_PIN_CONFIG);
 	switch (val) {
 	case I2S_MODE:
 		adata->res = devm_kzalloc(&pci->dev,
-					  sizeof(struct resource) * 2,
-					  GFP_KERNEL);
+				sizeof(struct resource) * 2,
+				GFP_KERNEL);
 		if (!adata->res) {
 			ret = -ENOMEM;
 			goto unmap_mmio;
@@ -96,21 +99,43 @@ static int snd_acp3x_probe(struct pci_dev *pci,
 		pdevinfo.data = &irqflags;
 		pdevinfo.size_data = sizeof(irqflags);
 
-		adata->pdev = platform_device_register_full(&pdevinfo);
-		if (IS_ERR(adata->pdev)) {
+		adata->pdev[0] = platform_device_register_full(&pdevinfo);
+		if (IS_ERR(adata->pdev[0])) {
 			dev_err(&pci->dev, "cannot register %s device\n",
 				pdevinfo.name);
-			ret = PTR_ERR(adata->pdev);
+			ret = PTR_ERR(adata->pdev[0]);
 			goto unmap_mmio;
 		}
+
+		/* create dummy codec device */
+		adata->pdev[1] = platform_device_register_simple("dummy_w5102",
+					0, NULL, 0);
+		if (IS_ERR(adata->pdev[1])) {
+			dev_err(&pci->dev, "Cannot register dummy_w5102\n");
+			ret = -ENODEV;
+			goto unregister_pdev0;
+		}
+		/* create dummy mach device */
+		adata->pdev[2] = platform_device_register_simple(
+					"acp3x_w5102_mach", 0, NULL, 0);
+		if (IS_ERR(adata->pdev[2])) {
+			dev_err(&pci->dev, "Cannot register acp3x_w5102_mach\n");
+			ret = -ENODEV;
+			goto unregister_pdev1;
+		}
 		break;
 	default:
-		dev_err(&pci->dev, "Invalid ACP audio mode : %d\n", val);
+		dev_err(&pci->dev, "Inavlid ACP audio mode : %d\n", val);
 		ret = -ENODEV;
 		goto unmap_mmio;
 	}
+
 	return 0;
 
+unregister_pdev1:
+	platform_device_unregister(adata->pdev[1]);
+unregister_pdev0:
+	platform_device_unregister(adata->pdev[0]);
 unmap_mmio:
 	pci_disable_msi(pci);
 	iounmap(adata->acp3x_base);
@@ -124,9 +149,14 @@ static int snd_acp3x_probe(struct pci_dev *pci,
 
 static void snd_acp3x_remove(struct pci_dev *pci)
 {
+	int i;
 	struct acp3x_dev_data *adata = pci_get_drvdata(pci);
 
-	platform_device_unregister(adata->pdev);
+	if (adata->acp3x_audio_mode == ACP3x_I2S_MODE) {
+		for (i = 2; i >= 0; i--)
+			platform_device_unregister(adata->pdev[i]);
+	}
+
 	iounmap(adata->acp3x_base);
 
 	pci_disable_msi(pci);
-- 
2.17.1

