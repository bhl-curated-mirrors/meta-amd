From 867278e78701a0d624e754ba78475f9bf3dceda4 Mon Sep 17 00:00:00 2001
From: Flora Cui <flora.cui@amd.com>
Date: Sat, 10 Oct 2015 17:11:12 +0800
Subject: [PATCH 0163/1453] drm/amdgpu: [hybrid] add query for aperture va
 range

Signed-off-by: Flora Cui <Flora.Cui@amd.com>
Reviewed-by: Jammy Zhou <Jammy.Zhou@amd.com>
Reviewed-by: Alex Deucher <alexander.deucher@amd.com>
Signed-off-by: Kalyan Alle <kalyan.alle@amd.com>
---
 drivers/gpu/drm/amd/amdgpu/amdgpu_kms.c | 18 ++++++++++++++++++
 include/uapi/drm/amdgpu_drm.h           | 21 +++++++++++++++++++++
 2 files changed, 39 insertions(+)

diff --git a/drivers/gpu/drm/amd/amdgpu/amdgpu_kms.c b/drivers/gpu/drm/amd/amdgpu/amdgpu_kms.c
index 9677988411fb..cca313cee869 100644
--- a/drivers/gpu/drm/amd/amdgpu/amdgpu_kms.c
+++ b/drivers/gpu/drm/amd/amdgpu/amdgpu_kms.c
@@ -463,6 +463,24 @@ static int amdgpu_info_ioctl(struct drm_device *dev, void *data, struct drm_file
 		return -EINVAL;
 
 	switch (info->query) {
+	case AMDGPU_INFO_VIRTUAL_RANGE: {
+		struct drm_amdgpu_virtual_range range_info;
+
+		switch (info->virtual_range.aperture) {
+		case AMDGPU_SUA_APERTURE_PRIVATE:
+			range_info.start = adev->gmc.private_aperture_start;
+			range_info.end = adev->gmc.private_aperture_end;
+			break;
+		case AMDGPU_SUA_APERTURE_SHARED:
+			range_info.start = adev->gmc.shared_aperture_start;
+			range_info.end = adev->gmc.shared_aperture_end;
+			break;
+		default:
+			return -EINVAL;
+		}
+		return copy_to_user(out, &range_info,
+				min((size_t)size, sizeof(range_info))) ? -EFAULT : 0;
+	}
 	case AMDGPU_INFO_ACCEL_WORKING:
 		ui32 = adev->accel_working;
 		return copy_to_user(out, &ui32, min(size, 4u)) ? -EFAULT : 0;
diff --git a/include/uapi/drm/amdgpu_drm.h b/include/uapi/drm/amdgpu_drm.h
index bbdad866e3fe..47f64dde0c83 100644
--- a/include/uapi/drm/amdgpu_drm.h
+++ b/include/uapi/drm/amdgpu_drm.h
@@ -788,6 +788,12 @@ struct drm_amdgpu_cs_chunk_data {
 /* RAS MASK: FUSE */
 #define AMDGPU_INFO_RAS_ENABLED_FUSE			(1 << 13)
 
+/* Hybrid Stack Specific Defs*/
+/* gpu capability */
+#define AMDGPU_INFO_CAPABILITY			0x50
+/* virtual range */
+#define AMDGPU_INFO_VIRTUAL_RANGE		0x51
+
 #define AMDGPU_INFO_MMR_SE_INDEX_SHIFT	0
 #define AMDGPU_INFO_MMR_SE_INDEX_MASK	0xff
 #define AMDGPU_INFO_MMR_SH_INDEX_SHIFT	8
@@ -844,6 +850,11 @@ struct drm_amdgpu_info {
 			__u32 flags;
 		} read_mmr_reg;
 
+		struct {
+			uint32_t aperture;
+			uint32_t _pad;
+		} virtual_range;
+
 		struct drm_amdgpu_query_fw query_fw;
 
 		struct {
@@ -1062,6 +1073,16 @@ struct drm_amdgpu_info_vce_clock_table {
 #define AMDGPU_FAMILY_RV			142 /* Raven */
 #define AMDGPU_FAMILY_NV			143 /* Navi10 */
 
+/**
+ *  Definition of System Unified Address (SUA) apertures
+ */
+#define AMDGPU_SUA_APERTURE_PRIVATE    1
+#define AMDGPU_SUA_APERTURE_SHARED     2
+struct drm_amdgpu_virtual_range {
+	uint64_t start;
+	uint64_t end;
+};
+
 #if defined(__cplusplus)
 }
 #endif
-- 
2.17.1

